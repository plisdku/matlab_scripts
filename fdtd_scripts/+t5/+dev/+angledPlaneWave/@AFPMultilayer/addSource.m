function addSource(obj, origin, direction, polarization, source, varargin)

assert(length(origin) == 3);
assert(length(direction) == 3);
assert(length(polarization) == 3);

obj.sourceOrigin = origin;
obj.sourceDirection = direction;
obj.source = reshape(source, 1, []);

%keyboard
if nargin >= 7
    assert(length(varargin{1}) == 3);
    assert(length(varargin{2}) == length(source));
    
    polarization2 = reshape(varargin{1}, size(polarization));
    source2 = reshape(varargin{2}, size(source));
    
    % Take note: I use ifft() to do a "reverse-time Fourier transform."
    % This is because my sign convention is exp(ikx - iwt).
    if direction(3) > 0
        obj.source = [...
            polarization(1)*source + polarization2(1)*source2; ...
            polarization(2)*source + polarization2(2)*source2; ...
            0*source; ...
            0*source];
    else
        obj.source = [...
            0*source; ...
            0*source; ...
            polarization(1)*source + polarization2(1)*source2; ...
            polarization(2)*source + polarization2(2)*source2];
    end
else
    if direction(3) > 0
        obj.source = [...
            polarization(1)*source; ...
            polarization(2)*source; ...
            0*source; ...
            0*source];
    else
        obj.source = [...
            0*source;...
            0*source;...
            polarization(1)*source; ...
            polarization(2)*source];
    end
end

%keyboard